/*** THIS FILE US AUTOGENERATED BY apollox, DON'T EDIT IT MANUALLY ***/

/* tslint:disable */
import { mutation, query } from './client';
import * as T from './types';

import { Comment } from './generated-queries/comment-queries';
import { Comments } from './generated-queries/comments-queries';
import { CreateComment } from './generated-queries/create-comment-queries';
import { CreateFile } from './generated-queries/create-file-queries';
import { CreateUser } from './generated-queries/create-user-queries';
import { CreateVote } from './generated-queries/create-vote-queries';
import { DeleteComments } from './generated-queries/delete-comments-queries';
import { DeleteFiles } from './generated-queries/delete-files-queries';
import { DeleteUsers } from './generated-queries/delete-users-queries';
import { DeleteVotes } from './generated-queries/delete-votes-queries';
import { EmailLogin } from './generated-queries/email-login-queries';
import { EmailRegister } from './generated-queries/email-register-queries';
import { File } from './generated-queries/file-queries';
import { Files } from './generated-queries/files-queries';
import { Logout } from './generated-queries/logout-queries';
import { SearchComments } from './generated-queries/search-comments-queries';
import { SearchFiles } from './generated-queries/search-files-queries';
import { SearchUsers } from './generated-queries/search-users-queries';
import { SearchVotes } from './generated-queries/search-votes-queries';
import { UpdateComment } from './generated-queries/update-comment-queries';
import { UpdateFile } from './generated-queries/update-file-queries';
import { UpdateUser } from './generated-queries/update-user-queries';
import { UpdateVote } from './generated-queries/update-vote-queries';
import { User } from './generated-queries/user-queries';
import { Users } from './generated-queries/users-queries';
import { Vote } from './generated-queries/vote-queries';
import { Votes } from './generated-queries/votes-queries';

export class GraphqlStore {
  public comment = query<T.CommentVariables, T.Comment>(Comment);
  public comments = query<{}, T.Comments>(Comments);
  public createComment = mutation<T.CreateCommentVariables, T.CreateComment>(CreateComment);
  public createFile = mutation<T.CreateFileVariables, T.CreateFile>(CreateFile);
  public createUser = mutation<T.CreateUserVariables, T.CreateUser>(CreateUser);
  public createVote = mutation<T.CreateVoteVariables, T.CreateVote>(CreateVote);
  public deleteComments = mutation<T.DeleteCommentsVariables, T.DeleteComments>(DeleteComments);
  public deleteFiles = mutation<T.DeleteFilesVariables, T.DeleteFiles>(DeleteFiles);
  public deleteUsers = mutation<T.DeleteUsersVariables, T.DeleteUsers>(DeleteUsers);
  public deleteVotes = mutation<T.DeleteVotesVariables, T.DeleteVotes>(DeleteVotes);
  public emailLogin = mutation<T.EmailLoginVariables, T.EmailLogin>(EmailLogin);
  public emailRegister = mutation<T.EmailRegisterVariables, T.EmailRegister>(EmailRegister);
  public file = query<T.FileVariables, T.File>(File);
  public files = query<{}, T.Files>(Files);
  public logout = mutation<{}, T.Logout>(Logout);
  public searchComments = query<T.SearchCommentsVariables, T.SearchComments>(SearchComments);
  public searchFiles = query<T.SearchFilesVariables, T.SearchFiles>(SearchFiles);
  public searchUsers = query<T.SearchUsersVariables, T.SearchUsers>(SearchUsers);
  public searchVotes = query<T.SearchVotesVariables, T.SearchVotes>(SearchVotes);
  public updateComment = mutation<T.UpdateCommentVariables, T.UpdateComment>(UpdateComment);
  public updateFile = mutation<T.UpdateFileVariables, T.UpdateFile>(UpdateFile);
  public updateUser = mutation<T.UpdateUserVariables, T.UpdateUser>(UpdateUser);
  public updateVote = mutation<T.UpdateVoteVariables, T.UpdateVote>(UpdateVote);
  public user = query<T.UserVariables, T.User>(User);
  public users = query<{}, T.Users>(Users);
  public vote = query<T.VoteVariables, T.Vote>(Vote);
  public votes = query<{}, T.Votes>(Votes);
}

export const graphqlStore = new GraphqlStore();